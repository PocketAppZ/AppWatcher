buildscript {
    ext.kotlin_version = '1.2.10'
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        maven { url 'https://maven.fabric.io/public' }
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.0-alpha07'
        classpath 'com.google.gms:google-services:3.1.0'
        classpath 'com.google.gms:oss-licenses:0.9.1'
        classpath 'io.fabric.tools:gradle:1.24.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://maven.google.com' }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.oss.licenses.plugin'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android-extensions'

dependencies {
    compile 'com.github.anod:android-utils-lib:v1.0.3'

    compile 'com.google.android.gms:play-services-drive:11.8.0'
    compile 'com.google.android.gms:play-services-oss-licenses:11.8.0'

    compile 'com.google.firebase:firebase-core:11.8.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }
    compile 'com.firebase:firebase-jobdispatcher:0.8.5'

    compile 'com.squareup.tape2:tape:2.0.0-SNAPSHOT'
    compile 'com.squareup.okhttp3:okhttp:3.9.0'
    compile 'com.squareup.picasso:picasso:3.0.0-SNAPSHOT'

    testCompile 'junit:junit:4.12'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    compile project(path: ':colorpicker')
    compile project(path: ':framework')
    compile project(path: ':playstore')
}

android {
    compileSdkVersion 27

    defaultConfig {
        applicationId 'com.anod.appwatcher'
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 80
        versionName '1.10'
        resValue "string", "content_authority", "com.anod.appwatcher"

        vectorDrawables.generatedDensities = ['hdpi','xxhdpi']
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }

        release {
            storeFile file(APPWATCHER_KEYSTORE_FILE)
            storePassword APPWATCHER_KEYSTORE_PASSWORD
            keyAlias APPWATCHER_KEY_ALIAS
            keyPassword APPWATCHER_KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            proguardFile 'proguard-project.txt'
            proguardFile getDefaultProguardFile('proguard-android.txt')

            resValue "string", "content_authority", "com.anod.appwatcher.debug"
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFile 'proguard-project.txt'
            proguardFile getDefaultProguardFile('proguard-android.txt')
            signingConfig signingConfigs.release
        }
    }


    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in close builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

//    task genSource(type: Exec) {
//        println "Executing " + АPPWATCHER_BOOTSTRAP_FILE
//        commandLine АPPWATCHER_BOOTSTRAP_FILE
//    }
//
//    preBuild.dependsOn genSource
}

apply plugin: 'idea'
idea {
    module{
        downloadJavadoc = true
        downloadSources = true
//        sourceDirs += file("E:\\Android\\sdk\\extras\\android\\support\\v4\\src\\")
//        sourceDirs += file("E:\\Android\\sources\\platform_frameworks_support\\v7\\appcompat\\src")
    }
}

// ADD THIS AT THE BOTTOM
apply plugin: 'com.google.gms.google-services'