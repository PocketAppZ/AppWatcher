import java.text.SimpleDateFormat

buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.1'
        classpath 'io.fabric.tools:gradle:1.+'
    }

}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

configurations.all {
    resolutionStrategy.cacheDynamicVersionsFor 10, 'minutes'
}

dependencies {
    compile files('libs/protobuf-java-2.4.1.jar')
    compile files('libs/keyczar-0.71g-090613.jar')
    compile files('libs/org.apache.http.legacy.jar')

    compile 'com.github.anod:android-utils-lib:6248896ebb'

    compile 'com.android.support:appcompat-v7:23.0.1'
    compile 'com.android.support:recyclerview-v7:23.0.1'
    compile 'com.android.support:design:23.0.1'
    compile 'com.android.support:cardview-v7:23.0.1'
    compile 'com.android.support:palette-v7:23.0.1'

    compile 'com.google.android.gms:play-services-identity:8.1.0'
    compile 'com.google.android.gms:play-services-drive:8.1.0'

    compile 'com.mcxiaoke.volley:library:1.0.18'
    compile 'com.jakewharton:butterknife:6.1.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.2.2@aar') {
        transitive = true;
    }

    // Find memory leaks tool
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    compile('com.mopub.sdk.android:mopub:3.4.0@aar') {
        transitive = true;
    }

}

def buildTime() {
    def df = new SimpleDateFormat("yyyyMMddHm")
    return df.format(new Date())
}
android {
    compileSdkVersion 23
    buildToolsVersion '23.0.1'

    defaultConfig {
        applicationId 'com.anod.appwatcher'
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 24
        versionName '1.7.4'

        resValue "string", "content_authority", "com.anod.appwatcher"
    }

    signingConfigs {
        debug {
            storeFile file("../debug.keystore")
        }

        release {
            storeFile file(APPWATCHER_KEYSTORE_FILE)
            storePassword APPWATCHER_KEYSTORE_PASSWORD
            keyAlias APPWATCHER_KEY_ALIAS
            keyPassword APPWATCHER_KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            applicationIdSuffix ".debug"
            versionNameSuffix "-" + buildTime()
            proguardFile 'proguard-project.txt'
            proguardFile getDefaultProguardFile('proguard-android.txt')

            resValue "string", "content_authority", "com.anod.appwatcher.debug"
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFile 'proguard-project.txt'
            proguardFile getDefaultProguardFile('proguard-android.txt')
            signingConfig signingConfigs.release
        }
    }


    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}